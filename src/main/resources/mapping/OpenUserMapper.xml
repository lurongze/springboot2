<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lrz.mapper.OpenUserMapper" >
  <resultMap id="BaseResultMap" type="com.lrz.model.OpenUser" >
    <id column="session_key" property="sessionKey" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="unionid" property="unionid" jdbcType="VARCHAR" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="wx_session" property="wxSession" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    session_key, wx_session, openid, unionid, info
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from open_user
    where session_key = #{sessionKey,jdbcType=VARCHAR}
  </select>
  <select id="selectByOpenId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from open_user
    where openid = #{openId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from open_user
    where session_key = #{sessionKey,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lrz.model.OpenUser" >
    insert into open_user (session_key, openid, unionid, 
      info)
    values (#{sessionKey,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{unionid,jdbcType=VARCHAR}, 
      #{info,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lrz.model.OpenUser" >
    insert into open_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sessionKey != null" >
        session_key,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="unionid != null" >
        unionid,
      </if>
      <if test="info != null" >
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sessionKey != null" >
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null" >
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrz.model.OpenUser" >
    update open_user
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null" >
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
    </set>
    where session_key = #{sessionKey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrz.model.OpenUser" >
    update open_user
    set openid = #{openid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      wx_session = #{wxSession,jdbcType=VARCHAR}
    where session_key = #{sessionKey,jdbcType=VARCHAR}
  </update>
  <update id="updateByOpenId" parameterType="com.lrz.model.OpenUser" >
    update open_user
    set session_key = #{sessionKey,jdbcType=VARCHAR},
    unionid = #{unionid,jdbcType=VARCHAR},
    info = #{info,jdbcType=VARCHAR},
    wx_session = #{wxSession,jdbcType=VARCHAR}
    where openid = #{openid,jdbcType=VARCHAR}
  </update>
</mapper>